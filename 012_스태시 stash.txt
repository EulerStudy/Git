# 작성한 소스가 맘에 안들어서 다른 곳에 보관하고 싶을 때
> git init

> git add .

> git commit -m '어쩌구'

# 커밋 이후부터 작성한 소스가 임시 공간으로 이동된다.
# staging 안해놓은 새로운 파일은 stash 안될 수도 있다.
> git stash

# git stash와 동일
> git stash push

# 의미 있는 메시지를 부여하고 싶다면
> git stash push -m 'first try'

# 스테이징 영역에 있는 것을 유지하면서 스테시에 저장하고 싶다면
> git stash push -m "second try" --keep-index

# 트랙킹 되지 않는 파일도 스테시에 저장하고 싶다면
> git stash -u

# 보관된 코드 목록 조회
> git stash list
stash@{0}: WIP on main: 3345766 feature a
stash@{1}: WIP on main: 3345766 feature a
stash@{2}: On main: second try
stash@{3}: On main: first try

# 특정 아이디를 확인하고 싶다면
> git stash show stash@{3}

# 특정 아이디를 조금더 자세히 확인하고 싶다면
> git stash show stash@{3} -p

# 가장 최근 stash 적용
# 하지만 이전의 stash 내용들이 그대로 있다.
> git stash apply

# 특정한 stash를 적용하고 싶다면
# 하지만 이전의 stash 내용들이 그대로 있다.
> git stash apply stash@{3}

# 메모도 적고 싶으면
> git stash save '메모'

# 코드 다시 불러오려면 최근 보관된 항목 나옴
# 최근 스테시 제거
> git stash pop

# 최근 시트세 적용하고 새로운 브랜치를 만들고 싶다면
> git stash branch newBranch

# stash 1개 삭제
> git stash drop 번호

# stash 전부 삭제
> git stash clear

