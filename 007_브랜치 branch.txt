# 레파지토리에 있는 브랜치 확인
> git branch
*master

# 서버에 있는 브랜치까지 확인
> git branch --all

> git branch -a
*master
remotes/origin/master

# signin branch 생성
> git branch signin

> git branch
* master
signin

# signin 브랜치로 이동
> git chechout signin
Switched to branch 'signin'

# 코딩애플,드림코딩에서는 checkout 안쓰고 switch 쓰네
> git switch signin

# 브랜치 만들고 해당 브랜치로 이동
> git switch -C new-branch

# 브랜치 만들고 해당 브랜치로 이동
> git chechout -b new-branch

# 간단하게 최신 커밋 확인
> git branch -v

# 현재 브랜치에 머지가 된 브랜치 확인
> git branch --merged

# 머지가 되지 않은 브랜치 확인
> git branch --no-merged

# 브랜치 삭제
> git branch -d new-branch

# 원격 브랜치 삭제
> git push origin --delete new-branch

# 브랜치 이름 변경
> git branch --move new-branch new-branch2

# 원격의 브랜치 이름 변경
> git push --set-upstream origin new-branch2

> git status

> git add .

> git commit -m '새로운 버전 생성'

# master 브랜치로 이동
> git checkout master

# signin 브랜치로 이동
> git checkout signin

> git push orgin master

/// 다른 환경에서 브랜치 만들기

> git branch
*master

> git branch -r
origin/HEAD -> origin/master
origin/master
origin/purple

> git checkout -t origin/purple

> git branch
master
* purple

> git checkout master

# 퍼플브랜치 삭제
> git branch -d purple

> git branch
* master

> git branch yellow

> git branch
* master
yellow

> git checkout yellow

> git branch -d yellow

# 생성과 동시에 해당 브랜치로 이동
> git checkout -b yellow

> git push origin yellow

# 브랜치 삭제, 다 사용한 브랜치 삭제
git branch -d 브랜치명

# 머지 안한 브랜치 삭제
git branch -D 브랜치명

